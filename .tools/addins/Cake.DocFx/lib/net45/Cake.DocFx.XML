<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cake.DocFx</name>
    </assembly>
    <members>
        <member name="T:Cake.DocFx.DocFxLogLevel">
            <summary>
            Acceptable log levels for DocFx.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxLogLevel.Default">
            <summary>
            Default log level of DocFx.
            Same as <see cref="F:Cake.DocFx.DocFxLogLevel.Info"/>.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxLogLevel.Verbose">
            <summary>
            Verbose logging.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxLogLevel.Info">
            <summary>
            Logs errors, warnings and informational messages. 
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxLogLevel.Warning">
            <summary>
            Logs errors and warnings.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxLogLevel.Error">
            <summary>
            Logs only errors.
            </summary>
        </member>
        <member name="T:Cake.DocFx.Build.DocFxBuildRunner">
            <summary>
            Command line runner for the <c>docfx build</c> command.
            </summary>
        </member>
        <member name="M:Cake.DocFx.Build.DocFxBuildRunner.#ctor(Cake.Core.IO.IFileSystem,Cake.Core.ICakeEnvironment,Cake.Core.IO.IProcessRunner,Cake.Core.Tooling.IToolLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.DocFx.Build.DocFxBuildRunner"/> class.
            </summary>
            <param name="fileSystem">The file system.</param>
            <param name="environment">The environment.</param>
            <param name="processRunner">The process runner.</param>
            <param name="tools">The tools.</param>
        </member>
        <member name="M:Cake.DocFx.Build.DocFxBuildRunner.Run(Cake.Core.IO.FilePath,Cake.DocFx.Build.DocFxBuildSettings)">
            <summary>
            Runs DocFx for the current folder with the given configuration.
            </summary>
            <param name="path">The optional path to the docfx.json config file.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="T:Cake.DocFx.Build.DocFxBuildSettings">
            <summary>
            Contains settings used by <see cref="T:Cake.DocFx.Build.DocFxBuildRunner"/>.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Build.DocFxBuildSettings.OutputPath">
            <summary>
            Gets or sets the output folder. The default is _site, and is configured in the 'build' 
            section of docfx.json.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Build.DocFxBuildSettings.LogPath">
            <summary>
            Gets or sets the path and file name where the log file generated by DocFx will be saved.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Build.DocFxBuildSettings.LogLevel">
            <summary>
            Gets or sets to which log level will be logged.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Build.DocFxBuildSettings.TemplateFolder">
            <summary>
            Gets or sets the template path to use. If not specified, the default template configured 
            in the 'build' section of docfx.json will be used.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Build.DocFxBuildSettings.GlobalMetadata">
            <summary>
            Gets global metadata.
            It overrides the globalMetadata settings from the config file.
            See <see cref="T:Cake.DocFx.DocFxGlobalMetadata"/> for constants for metadata keys.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Build.DocFxBuildSettings.Serve">
            <summary>
            Gets or sets a value indicating whether to enable previewing of the generated documentation
            in a built in web server. 
            </summary>
        </member>
        <member name="T:Cake.DocFx.DocFxMetadataAliases">
            <summary>
            Contains functionality related to extracting API metadata using
            <see href="http://dotnet.github.io/docfx">DocFx</see>.
            </summary>
        </member>
        <member name="M:Cake.DocFx.DocFxMetadataAliases.DocFxMetadata(Cake.Core.ICakeContext)">
            <summary>
            Extract API documentation using DocFx for the <c>docfx.json</c> file 
            in the current working directory.
            </summary>
            <param name="context">The Cake context.</param>
            <example>
            <code>
            DocFxMetadata();
            </code>
            </example>
        </member>
        <member name="M:Cake.DocFx.DocFxMetadataAliases.DocFxMetadata(Cake.Core.ICakeContext,Cake.Core.IO.FilePath)">
            <summary>
            Extract API documentation using DocFx for a specific <c>docfx.json</c> file.
            </summary>
            <param name="context">The Cake context.</param>
            <param name="configFile">The path to the docfx.json config file.</param>
            <example>
            <code>
            DocFxMetadata("./docs/docfx.json");
            </code>
            </example>
        </member>
        <member name="M:Cake.DocFx.DocFxMetadataAliases.DocFxMetadata(Cake.Core.ICakeContext,System.Collections.Generic.IEnumerable{Cake.Core.IO.FilePath})">
            <summary>
            Extract API documentation using DocFx, with the specified project/source files or search patterns.
            </summary>
            <param name="context">The Cake context.</param>
            <param name="files">The project or source files, or search patterns.</param>
            <example>
            <code>
            var files = GetFiles("./src/**/*.csproj");
            DocFxMetadata(files);
            </code>
            </example>
        </member>
        <member name="M:Cake.DocFx.DocFxMetadataAliases.DocFxMetadata(Cake.Core.ICakeContext,Cake.DocFx.Metadata.DocFxMetadataSettings)">
            <summary>
            Extract API documentation using DocFx, with the specified settings.
            </summary>
            <param name="context">The Cake context.</param>
            <param name="settings">The DocFx settings.</param>
            <example>
            <code>
            DocFxMetadata(new DocFxMetadataSettings()
            {
                OutputPath = "./artifacts/docs"
            });
            </code>
            </example>
            <example>
            <code>
            DocFxMetadata(new DocFxMetadataSettings()
            {
                OutputPath = "./artifacts/docs",
                Projects = GetFiles("./src/**/*.csproj")
            });
            </code>
            </example>
        </member>
        <member name="T:Cake.DocFx.DocFxInitAliases">
            <summary>
            Contains functionality related to creating new <see href="http://dotnet.github.io/docfx">DocFx</see>
            projects.
            </summary>
        </member>
        <member name="M:Cake.DocFx.DocFxInitAliases.DocFxInit(Cake.Core.ICakeContext)">
            <summary>
            Generate an initial <c>docfx.json</c> file.
            </summary>
            <param name="context">The Cake context.</param>
            <example>
            <code>
            DocFxInit();
            </code>
            </example>
        </member>
        <member name="M:Cake.DocFx.DocFxInitAliases.DocFxInit(Cake.Core.ICakeContext,Cake.DocFx.Init.DocFxInitSettings)">
            <summary>
            Generate an initial <c>docfx.json</c> file, with the specified settings.
            </summary>
            <param name="context">The Cake context.</param>
            <param name="settings">The optional DocFx settings. 
            If no settings are passed default settings are used.</param>
            <example>
            <code>
            DocFxInit(new DocFxInitSettings()
            {
                OutputPath = "./docs"
            });
            </code>
            </example>
            <example>
            <code>
            DocFxInit(new DocFxInitSettings()
            {
                OutputPath = "./docs",
                OnlyConfigFile = true
            });
            </code>
            </example>
        </member>
        <member name="T:Cake.DocFx.DocFxBuildAliases">
            <summary>
            Contains functionality related to building websites using 
            <see href="http://dotnet.github.io/docfx">DocFx</see>.
            </summary>
        </member>
        <member name="M:Cake.DocFx.DocFxBuildAliases.DocFxBuild(Cake.Core.ICakeContext)">
            <summary>
            Generate client-only website combining API in YAML files and conceptual files
            for the <c>docfx.json</c> file in the current working directory.
            </summary>
            <param name="context">The Cake context.</param>
            <example>
            <code>
            DocFxBuild();
            </code>
            </example>
        </member>
        <member name="M:Cake.DocFx.DocFxBuildAliases.DocFxBuild(Cake.Core.ICakeContext,Cake.Core.IO.FilePath)">
            <summary>
            Generate client-only website combining API in YAML files and conceptual files
            for a specific <c>docfx.json</c> file.
            </summary>
            <param name="context">The Cake context.</param>
            <param name="configFile">The optional path to a DocFx config file.
            If no value is passed the docfx.json file in the current working directory will be used.</param>
            <example>
            <code>
            DocFxBuild("./docs/docfx.json");
            </code>
            </example>
        </member>
        <member name="M:Cake.DocFx.DocFxBuildAliases.DocFxBuild(Cake.Core.ICakeContext,Cake.DocFx.Build.DocFxBuildSettings)">
            <summary>
            Generate client-only website combining API in YAML files and conceptual files 
            for the <c>docfx.json</c> file in the current working directory using the specified settings.
            </summary>
            <param name="context">The Cake context.</param>
            <param name="settings">The optional DocFx settings. 
            If no settings are passed default settings are used.</param>
            <example>
            <code>
            DocFxBuild(new DocFxBuildSettings()
            {
                OutputPath = "./artifacts/docs",
                TemplateFolder = "default"
            });
            </code>
            </example>
        </member>
        <member name="M:Cake.DocFx.DocFxBuildAliases.DocFxBuild(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.DocFx.Build.DocFxBuildSettings)">
            <summary>
            Generate client-only website combining API in YAML files and conceptual files
            for a specific <c>docfx.json</c> file using the specified settings.
            </summary>
            <param name="context">The Cake context.</param>
            <param name="configFile">The optional path to a DocFx config file.
            If no value is passed the docfx.json file in the current working directory will be used.</param>
            <param name="settings">The optional DocFx settings. 
            If no settings are passed default settings are used.</param>
            <example>
            <code>
            DocFxBuild("./docs/docfx.json", new DocFxBuildSettings()
            {
                OutputPath = "./artifacts/docs",
                TemplateFolder = "default"
            });
            </code>
            </example>
        </member>
        <member name="T:Cake.DocFx.DocFxAliases">
            <summary>
            Contains functionality related to <see href="http://dotnet.github.io/docfx">DocFx</see>.
            </summary>
        </member>
        <member name="M:Cake.DocFx.DocFxAliases.DocFx(Cake.Core.ICakeContext)">
            <summary>
            Obsolete. Use <see cref="M:Cake.DocFx.DocFxBuildAliases.DocFxBuild(Cake.Core.ICakeContext)"/> instead.
            </summary>
            <param name="context">The Cake context.</param>
        </member>
        <member name="M:Cake.DocFx.DocFxAliases.DocFx(Cake.Core.ICakeContext,Cake.Core.IO.FilePath)">
            <summary>
            Obsolete. Use <see cref="M:Cake.DocFx.DocFxBuildAliases.DocFxBuild(Cake.Core.ICakeContext,Cake.Core.IO.FilePath)"/> instead.
            </summary>
            <param name="context">The Cake context.</param>
            <param name="configFile">The path to the docfx.json config file.</param>
        </member>
        <member name="M:Cake.DocFx.DocFxAliases.DocFx(Cake.Core.ICakeContext,Cake.DocFx.DocFxSettings)">
            <summary>
            Obsolete. Use <see cref="M:Cake.DocFx.DocFxBuildAliases.DocFxBuild(Cake.Core.ICakeContext,Cake.DocFx.Build.DocFxBuildSettings)"/> instead.
            </summary>
            <param name="context">The Cake context.</param>
            <param name="settings">The DocFx settings.</param>
        </member>
        <member name="M:Cake.DocFx.DocFxAliases.DocFx(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.DocFx.DocFxSettings)">
            <summary>
            Obsolete. Use <see cref="M:Cake.DocFx.DocFxBuildAliases.DocFxBuild(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.DocFx.Build.DocFxBuildSettings)"/> instead.
            </summary>
            <param name="context">The Cake context.</param>
            <param name="configFile">The path to the docfx.json config file.</param>
            <param name="settings">The DocFx settings.</param>
        </member>
        <member name="T:Cake.DocFx.DocFxGlobalMetadata">
            <summary>
            Constants for metadata keys.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.AppTitle">
            <summary>
            Metadata key for setting the title.
            The value will be appended to each output page's head title.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.AppFooter">
            <summary>
            Metadata key for setting the footer text.
            If not specified DocFX's Copyright will be shown.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.AppLogoPath">
            <summary>
            Metadata key for setting the logo file's path from output root.
            If not specified DocFX's logo will be shown.
            Remember to also add file to resource.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.AppFaviconPath">
            <summary>
            Metadata key for setting the favicon file's path from output root.
            If not specified DocFX's favicon will be shown.
            Remember to add file to resource.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.EnableSearch">
            <summary>
            Metadata key for showing the search box on the top of each page.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.EnableNewTab">
            <summary>
            Metadata key for setting indicating whether to open a new tab when clicking an external link.
            Internal links always shows within the current tab.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.DisableNavbar">
            <summary>
            Metadata key for disabling the navigation bar on the top of each page.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.DisableBreadcrumb">
            <summary>
            Metadata key for disabling the breadcrumb on the top of each page.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.DisableToc">
            <summary>
            Metadata key for disabling table of contents on the left of each page.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.DisableAffix">
            <summary>
            Metadata key for disabling the affix bar on the right of each page.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.DisableContribution">
            <summary>
            Metadata key for disabling the "View Source" and "Improve this Doc" buttons.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.GitContribute">
            <summary>
            Metadata key for customizing the "Improve this Doc" URL button for public contributors.
            Use repo to specify the contribution repository URL.
            Use branch to specify the contribution branch.
            Use path to specify the folder for new overwrite files.
            If not set, the Git URL and branch of the current Git repository will be used.
            </summary>
        </member>
        <member name="F:Cake.DocFx.DocFxGlobalMetadata.GitUrlPattern">
            <summary>
            Metadata key for choosing the URL pattern of the generated link for "View Source" and "Improve this Doc".
            Supports <c>github</c> and <c>vso</c> currently.
            If not set, DocFX will try speculating the pattern from domain name of the Git URL.
            </summary>
        </member>
        <member name="T:Cake.DocFx.Init.DocFxInitRunner">
            <summary>
            Command line runner for the <c>docfx init</c> command.
            </summary>
        </member>
        <member name="M:Cake.DocFx.Init.DocFxInitRunner.#ctor(Cake.Core.IO.IFileSystem,Cake.Core.ICakeEnvironment,Cake.Core.IO.IProcessRunner,Cake.Core.Tooling.IToolLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.DocFx.Init.DocFxInitRunner"/> class.
            </summary>
            <param name="fileSystem">The file system.</param>
            <param name="environment">The environment.</param>
            <param name="processRunner">The process runner.</param>
            <param name="tools">The tool locator.</param>
        </member>
        <member name="M:Cake.DocFx.Init.DocFxInitRunner.Run(Cake.DocFx.Init.DocFxInitSettings)">
            <summary>
            Runs DocFx generator with the given configuration.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="T:Cake.DocFx.Init.DocFxInitSettings">
            <summary>
            Contains settings used by <see cref="T:Cake.DocFx.Init.DocFxInitRunner"/>.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Init.DocFxInitSettings.OnlyConfigFile">
            <summary>
            Gets or sets a flag indicating if only the <code>docfx.json</code> file should be generated.
            In this case no project folder will be generated.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Init.DocFxInitSettings.OutputPath">
            <summary>
            Gets or sets the output folder of the config file.
            If not specified, the config file will be saved to a new folder <code>docfx_project</code>.
            </summary>
        </member>
        <member name="T:Cake.DocFx.DocFxSettings">
            <summary>
            Obsolete use aliases from <see cref="T:Cake.DocFx.DocFxBuildAliases"/> instead.
            </summary>
        </member>
        <member name="P:Cake.DocFx.DocFxSettings.OutputPath">
            <summary>
            Gets or sets the output folder. The default is _site, and is configured in the 'build' section of docfx.json.
            </summary>
        </member>
        <member name="T:Cake.DocFx.DocFxTool`1">
            <summary>
            Base class for the DocFx runners.
            </summary>
            <typeparam name="TSettings">The type of tool settings to use.</typeparam>
        </member>
        <member name="M:Cake.DocFx.DocFxTool`1.#ctor(Cake.Core.IO.IFileSystem,Cake.Core.ICakeEnvironment,Cake.Core.IO.IProcessRunner,Cake.Core.Tooling.IToolLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.DocFx.DocFxTool`1"/> class.
            </summary>
            <param name="fileSystem">The file system.</param>
            <param name="environment">The environment.</param>
            <param name="processRunner">The process runner.</param>
            <param name="tools">The tools.</param>
        </member>
        <member name="M:Cake.DocFx.DocFxTool`1.GetToolName">
            <summary>
            Gets the name of the tool.
            </summary>
            <returns>
            The name of the tool.
            </returns>
        </member>
        <member name="M:Cake.DocFx.DocFxTool`1.GetToolExecutableNames">
            <summary>
            Gets the possible names of the tool executable.
            </summary>
            <returns>
            The tool executable names.
            </returns>
        </member>
        <member name="M:Cake.DocFx.Helper.Contract.NotNull(System.Object,System.String)">
            <summary>
            Checks if param is not null and otherwise throws exception.
            </summary>
            <param name="parameter"></param>
            <param name="paramName"></param>
        </member>
        <member name="T:Cake.DocFx.Metadata.DocFxMetadataRunner">
            <summary>
            Command line runner for the <c>docfx metadata</c> command.
            </summary>
        </member>
        <member name="M:Cake.DocFx.Metadata.DocFxMetadataRunner.#ctor(Cake.Core.IO.IFileSystem,Cake.Core.ICakeEnvironment,Cake.Core.IO.IProcessRunner,Cake.Core.Tooling.IToolLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.DocFx.Metadata.DocFxMetadataRunner"/> class.
            </summary>
            <param name="fileSystem">The file system.</param>
            <param name="environment">The environment.</param>
            <param name="processRunner">The process runner.</param>
            <param name="tools">The tools.</param>
        </member>
        <member name="M:Cake.DocFx.Metadata.DocFxMetadataRunner.Run(Cake.DocFx.Metadata.DocFxMetadataSettings)">
            <summary>
            Runs DocFx for the current folder with the given configuration.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="T:Cake.DocFx.Metadata.DocFxMetadataSettings">
            <summary>
            Contains settings used by <see cref="T:Cake.DocFx.Metadata.DocFxMetadataRunner"/>.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Metadata.DocFxMetadataSettings.Projects">
            <summary>
                Specifies the projects to have metadata extracted. There are several approaches to extract language metadata.
                1. From a supported project file or project file list
                    Supported project file extensions include .csproj, .vbproj, .sln.
                2. From a supported source code file or source code file list
                    Supported source code file extensions include .cs and .vb. Files can be combined using , as seperator and search
                pattern.
                3. From docfx.json file. If the argument is not specified, docfx.exe will try reading docfx.json under current
                directory.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Metadata.DocFxMetadataSettings.OutputPath">
            <summary>
            Gets or sets the output folder. The default is api, and is configured in the 'metadata' section of docfx.json.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Metadata.DocFxMetadataSettings.LogPath">
            <summary>
            Gets or sets the path and file name where the log file generated by DocFx will be saved.
            </summary>
        </member>
        <member name="P:Cake.DocFx.Metadata.DocFxMetadataSettings.LogLevel">
            <summary>
            Gets or sets to which log level will be logged.
            </summary>
        </member>
    </members>
</doc>
